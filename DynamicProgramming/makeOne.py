# 1로 만들기
# 정수 x가 주어졌을 때, 정수 X에 사용할 수 있는 연산은 다음과 같이 4가지
# x가 5로 나누어 떨어지면, 5로 나눔
# x가 3으로 나누어 떨어지면, 3으로 나눔
# x가 2로 나누어 떨어지면, 2로 나눔
# x에서 1을 뺌

# 정수 x가 주어졌을 때, 연산 4개를 적절히 사용해 값을 1로 만들고자 함
# 연산을 사용하는 횟수의 최솟값 출력
# 예) 정수가 26이면: 26 -> 25 -> 5 -> 1로, 3번의 연산이 최솟값

# 아이디어: 1을 빼는 연산을 제외하고는 해당 수로 나누어 떨어질 때에 한해 점화식 적용 가능

x = int(input())

dp = [0] * 30001

for i in range(2, x + 1):
    # 현재 수에서 1 빼는 경우
    dp[i] = dp[i - 1] + 1
    # 현재 수가 2로 나누어 떨어지는 경우
    if i % 2 == 0:
        dp[i] = min(dp[i], dp[i // 2] + 1)
    # 현재 수가 3으로 나누어 떨어지는 경우
    if i % 3 == 0:
        dp[i] = min(dp[i], dp[i // 3] + 1)
    # 현재 수가 5로 나누어 떨어지는 경우
    if i % 5 == 0:
        dp[i] = min(dp[i], dp[i // 5] + 1)

print(dp[x])