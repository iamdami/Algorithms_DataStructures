# N가지 종류 화폐 존재
# 화폐들의 개수 최소한으로 이용해 그 가치의 합이 M원이 되도록 하려고 함
# 각 종류의 화폐는 몇 개라도 사용 가능
# 예) 2원, 3원 단위의 화폐 있을 때 15원 만들기 위해 3원을 5개 사용하는 것이 가장 최소한의 화폐 개수
# M원을 만들기 위한 최소한의 화폐 개수 출력하는 프로그램?

# 입력 조건
# 첫째 줄에 N, M 주어짐(1 <= N <= 100, 1 <= M <= 10,000)
# 이후 N개 줄에는 각 화폐의 가치 주어짐
# 화폐의 가치는 10,000보다 작거나 같은 자연수

# 출력 조건
# 첫째 줄에 최소 화폐 개수 출력
# 불가능할 때는 -1 출력

# 문제 해결
# 초기화
# 각 인덱스에 해당하는 값으로 INF(무한)값 설정
# INF는 특정 금액을 만들 수 있는 화폐 구성이 가능하지 않다는 의미
# 이 문제에서는 10,001 사용 가능

n, m = map(int, input().split())

# N개의 화폐 단위 정보 입력받기
moneyInfo = []
for i in range(n):
    moneyInfo.append(int(input()))

# 한 번 계산된 결과 저장 위한 DP 테이블 초기화
dp = [10001] * (m + 1)

# 다이나믹 프로그래밍(btm up)
dp[0] = 0
for i in range(n):
    for j in range(moneyInfo[i], m + 1):
        if dp[j - moneyInfo[i]] != 10001:  # (i - k)원을 만드는 방법이 존재할 경우
            dp[j] = min(dp[j], dp[j - moneyInfo[i]] + 1)

# 결과
if dp[m] == 10001:  # 최종적으로 M원 만드는 방법이 없는 경우
    print(-1)
else:
    print(dp[m])